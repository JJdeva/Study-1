CREATE TABLE TB_BSSH_TMP AS
SELECT * FROM TB_BSSH;

ANALYZE TABLE TB_BSSH_TMP COMPUTE STATISTICS;

CREATE INDEX IDX_TB_BSSH_TMP_01 ON TB_BSSH_TMP(ADSTRD_CD);

ANALYZE INDEX IDX_TB_BSSH_TMP_01 ESTIMATE STATISTICS;

ALTER SESSION SET STATISTICS_LEVEL = ALL;

SELECT /* SELECT.TB_BSSH_TMP.001 */
       A.BSSH_NO
     , A.CMPNM_NM
     , A.INDUTY_SMALL_CL_CD
     , A.ADSTRD_CD
     , A.LNM_ADRES
     , A.NW_ZIP
     , A.LO
     , A.LA
  FROM TB_BSSH_TMP A
 WHERE A.ADSTRD_CD = '4128157000' --경기도 고양시 덕양구 삼송동
ORDER BY A.ADSTRD_CD
;

SELECT SQL_ID
     , CHILD_NUMBER
     , SUBSTR(SQL_FULLTEXT, 1, 60)
  FROM V$SQL
  WHERE SQL_FULLTEXT LIKE '%SELECT.TB_BSSH_TMP.001%'
    AND SQL_FULLTEXT NOT LIKE '%V$SQL%'
  ORDER BY LAST_ACTIVE_TIME DESC
;

SELECT *
FROM TABLE
    (DBMS_XPLAN.DISPLAY_CURSOR
        ('16gwprmg7dg84', 0, 'ALLSTATS LAST -ROWS')
    )
;        

CREATE TABLE TB_SUBWAY_STATN_TK_GFF_TMP AS
SELECT * FROM TB_SUBWAY_STATN_TK_GFF
;

ANALYZE TABLE TB_SUBWAY_STATN_TK_GFF_TMP COMPUTE STATISTICS;

ALTER TABLE TB_SUBWAY_STATN_TK_GFF_TMP
ADD CONSTRAINT PK_TB_SUBWAY_STATN_TK_GFF_TMP
PRIMARY KEY(SUBWAY_STATN_NO , STD_YM, BEGIN_TIME, END_TIME, TK_GFF_SE_CD)
;

ANALYZE INDEX PK_TB_SUBWAY_STATN_TK_GFF_TMP ESTIMATE STATISTICS;

ALTER SESSION SET STATISTICS_LEVEL = ALL;

SELECT /* SELECT.TB_SUBWAY_STATN_TK_GFF_TMP.001 */
       A.SUBWAY_STATN_NO
     , A.STD_YM
     , A.BEGIN_TIME
     , A.END_TIME
     , A.TK_GFF_SE_CD
     , A.TK_GFF_CNT
  FROM TB_SUBWAY_STATN_TK_GFF_TMP A
 WHERE A.SUBWAY_STATN_NO = '000376' --일산선 삼송역
   AND A.STD_YM = '202010'
   AND A.BEGIN_TIME = '0700'
   AND A.END_TIME = '0800'
   AND A.TK_GFF_SE_CD = 'TGS001'
;

SELECT SQL_ID
     , CHILD_NUMBER
     , SUBSTR(SQL_FULLTEXT, 1, 60)
  FROM V$SQL
  WHERE SQL_FULLTEXT LIKE '%SELECT.TB_SUBWAY_STATN_TK_GFF_TMP.001%'
    AND SQL_FULLTEXT NOT LIKE '%V$SQL%'
  ORDER BY LAST_ACTIVE_TIME DESC
;

SELECT *
FROM TABLE
    (DBMS_XPLAN.DISPLAY_CURSOR
        ('g9pz01rvmukur', 0, 'ALLSTATS LAST -ROWS')
    )
;  

CREATE INDEX IDX_TB_SUB_STA_TK_GFF_TMP_02 ON TB_SUBWAY_STATN_TK_GFF_TMP (STD_YM, BEGIN_TIME);

--코드 7-19 통계정보 생성
ANALYZE INDEX IDX_TB_SUB_STA_TK_GFF_TMP_02 ESTIMATE STATISTICS;

--코드 7-20 통계레벨 설정
ALTER SESSION SET STATISTICS_LEVEL = ALL;

SELECT /*+ INDEX(A IDX_TB_SUBWAY_STATN_TK_GFF_TMP_02) */
       /* SELECT.TB_SUBWAY_STATN_TK_GFF_TMP.003 */
       A.STD_YM
     , A.BEGIN_TIME
  FROM TB_SUBWAY_STATN_TK_GFF_TMP A
  WHERE A.BEGIN_TIME >= '0200'
  ORDER BY A.STD_YM
;

SELECT SQL_ID
     , CHILD_NUMBER
     , SUBSTR(SQL_FULLTEXT, 1, 60)
  FROM V$SQL
  WHERE SQL_FULLTEXT LIKE '%INDEX(A IDX_TB_SUBWAY_STATN_TK_GFF_TMP_02)%'
    AND SQL_FULLTEXT NOT LIKE '%V$SQL%'
  ORDER BY LAST_ACTIVE_TIME DESC
;

SELECT *
FROM TABLE
    (DBMS_XPLAN.DISPLAY_CURSOR
        ('g7www3tk46m04', 0, 'ALLSTATS LAST -ROWS')
    )
;  

CREATE INDEX IDX_TB_SUB_STA_TK_GFF_TMP_03 ON TB_SUBWAY_STATN_TK_GFF_TMP
(TK_GFF_SE_CD, SUBWAY_STATN_NO);

--코드 7-23 통계정보 생성
ANALYZE INDEX IDX_TB_SUB_STA_TK_GFF_TMP_03 ESTIMATE STATISTICS;

--코드 7-24 통계레벨 설정
ALTER SESSION SET STATISTICS_LEVEL = ALL;

--코드 7-25 인덱스 스킵 스캔 유도
SELECT /*+ INDEX_SS(A IDX_TB_SUB_STA_TK_GFF_TMP_03) */
       /* SELECT.TB_SUBWAY_STATN_TK_GFF_TMP.004 */
       A.SUBWAY_STATN_NO
     , A.STD_YM
     , A.BEGIN_TIME
     , A.END_TIME
     , A.TK_GFF_SE_CD
     , A.TK_GFF_CNT
  FROM TB_SUBWAY_STATN_TK_GFF_TMP A
  WHERE A.SUBWAY_STATN_NO = '000376'
;

--코드 7-26 인덱스 생성
CREATE INDEX IDX_TB_SUB_STA_TK_GFF_TMP_04
ON TB_SUBWAY_STATN_TK_GFF_TMP(STD_YM, BEGIN_TIME, END_TIME);

--코드 7-27 통계정보 생성
ANALYZE INDEX IDX_TB_SUB_STA_TK_GFF_TMP_04 ESTIMATE STATISTICS;

--코드 7-28 통계레벨 설정
ALTER SESSION SET STATISTICS_LEVEL = ALL;

--코드 7-29 SQL문 실행
SELECT /*+ INDEX_FFS(A IDX_TB_SUB_STA_TK_GFF_TMP_04) */
       /* SELECT.TB_SUBWAY_STATN_TK_GFF_TMP.005 */
        A.STD_YM
      , MAX(A.BEGIN_TIME) AS BEGIN_TIME
      , MAX(A.END_TIME) AS END_TIME
   FROM TB_SUBWAY_STATN_TK_GFF_TMP A
  WHERE A.STD_YM >= '00000000'
  GROUP BY A.STD_YM
;

SELECT SQL_ID
     , CHILD_NUMBER
     , SUBSTR(SQL_FULLTEXT, 1, 60)
  FROM V$SQL
  WHERE SQL_FULLTEXT LIKE '%INDEX_FFS(A IDX_TB_SUB_STA_TK_GFF_TMP_04)%'
    AND SQL_FULLTEXT NOT LIKE '%V$SQL%'
  ORDER BY LAST_ACTIVE_TIME DESC
;

SELECT *
FROM TABLE
    (DBMS_XPLAN.DISPLAY_CURSOR
        ('3svhv15zuyt3h', 0, 'ALLSTATS LAST -ROWS')
    )
;  

--코드 7-30 인덱스 생성
CREATE INDEX IDX_TB_SUB_STA_TK_GFF_TMP_05
ON TB_SUBWAY_STATN_TK_GFF_TMP(STD_YM, END_TIME);


--코드 7-31 통계정보 수집
ANALYZE INDEX IDX_TB_SUB_STA_TK_GFF_TMP_05 ESTIMATE STATISTICS;

--코드 7-32 통계레벨 설정
ALTER SESSION SET STATISTICS_LEVEL = ALL;

--코드 7-33 SQL문 실행
SELECT /*+ INDEX_DESC(A IDX_TB_SUB_STA_TK_GFF_TMP_05) */
       /* SELECT.TB_SUBWAY_STATN_TK_GFF_TMP.006 */
       A.SUBWAY_STATN_NO
     , A.STD_YM
     , A.BEGIN_TIME
     , A.END_TIME
     , A.TK_GFF_SE_CD
     , A.TK_GFF_CNT
  FROM TB_SUBWAY_STATN_TK_GFF_TMP A
 WHERE A.STD_YM = '202010'
   AND A.END_TIME <= '1800'
 ORDER BY A.STD_YM, END_TIME DESC
;